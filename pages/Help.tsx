

import React, { useState, useMemo } from 'react';
import { ChevronDownIcon, HelpIcon } from '../components/icons';

interface FAQ {
    q: string;
    a: string;
}

interface FAQCategory {
    category: string;
    questions: FAQ[];
}

const faqs: FAQCategory[] = [
    {
        category: 'Getting Started',
        questions: [
            {
                q: 'What is the "Control Room"?',
                a: 'The Control Room is your new central hub for managing the station. It aggregates all items that require your attention—pending song requests, shoutouts, unapproved RSS articles, and draft social media posts—into a single, unified inbox. You can approve, reject, and manage content directly from this page.'
            },
            {
                q: 'How do I set up my station for the first time?',
                a: 'Navigate to "Station Settings" in the sidebar. Here, you can define your station\'s name, description, logo, and overall format (Music Radio vs. Talk Radio). These settings affect how the AI generates content and schedules.'
            },
            {
                q: 'What\'s the difference between "Music Radio" and "Talk Radio" formats?',
                a: 'The "Music Radio" format prioritizes playing songs from your library, interspersed with shorter talk segments, ads, and jingles. The "Talk Radio" format focuses more on longer-form content like articles and news, with music used as filler.'
            },
            {
                q: 'How do I link my Azuracast or Shoutcast server?',
                a: 'Go to the "Link Azuracast" or "Link Shoutcast" page from the sidebar. You will need your server URL and API key (for Azuracast) or admin password (for Shoutcast) to establish a connection.'
            }
        ]
    },
    {
        category: 'Cloud Broadcasting',
        questions: [
             {
                q: 'How does the cloud broadcast work?',
                a: 'Your station now runs in the cloud 24/7. When you click "Go Live" on the Schedule page, you start the "Auto DJ," which plays through your generated schedule automatically. The player at the bottom of the screen is your monitor for what\'s currently "on air." You can close your browser, and the station will stay online.'
            },
            {
                q: 'How do I go live as a DJ?',
                a: 'Click the "Go Live" button in the main header. A modal will open, allowing you to connect your microphone. When you "Start Broadcast," you will seamlessly take over from the Auto DJ. When you\'re finished, simply "End Broadcast," and the Auto DJ will immediately pick up where the schedule left off.'
            },
            {
                q: 'What is a failover playlist and how do I set one?',
                a: 'A failover playlist is a backup that automatically plays to prevent "dead air" (silence). You can set one in "Station Settings" under "Cloud Broadcasting". If your main schedule runs out of content or a live DJ disconnects unexpectedly, the system will switch to your failover playlist, keeping your station on the air.'
            },
        ]
    },
    {
        category: 'General Workflow',
        questions: [
            {
                q: 'What is the "+" button in the header?',
                a: 'This is the "Action Hub." It\'s a universal create button that gives you instant access to common tasks like uploading audio, creating a playlist, or composing a social post from anywhere in the app, saving you time and clicks.'
            },
            {
                q: 'How do I quickly add a song to the live show?',
                a: 'This is the "Queue Everywhere" feature. Look for the "Add to Queue" icon next to any track in "Content Management", "Audio Content", or even next to generated content in the "AI Content Studio". Clicking it instantly adds that item to the end of the live playout queue.'
            },
        ]
    },
    {
        category: 'Content Management',
        questions: [
            {
                q: 'What\'s the difference between "Content" and "Audio Content"?',
                a: '"Audio Content" is your primary library for all uploaded audio files (music, jingles, ads). "Content Management" is a broader view that includes your audio files plus text-based content like articles, news from RSS feeds, and scripts generated by the AI.'
            },
            {
                q: 'How do I add music to my station?',
                a: 'You can add music in two main ways: 1) Go to "Audio Content" and use the "Bulk Upload" button. 2) Use the "Action Hub" (+) in the header and select "Upload Audio" to open the upload modal from anywhere.'
            },
            {
                q: 'What is the Content Vault?',
                a: 'The Content Vault is a library of pre-made, royalty-free audio assets like jingles, sound effects, and music beds that you can import directly into your station\'s "Audio Content" library to enhance your broadcast.'
            }
        ]
    },
    {
        category: 'Scheduling & Playout',
        questions: [
            {
                q: 'How do I start my broadcast?',
                a: 'Go to the "Schedule" page. Configure your generation settings (either "AI Format" or "Show Designer") and click "Go Live". This will start the cloud "Auto DJ" which will run 24/7, and the player at the bottom of the app will begin monitoring the live feed.'
            },
            {
                q: 'What is the "Show Designer" and what are "Clockwheels"?',
                a: 'The "Show Designer" is a powerful tool that lets you create professional hourly templates, known as "clockwheels". Instead of a random schedule, you can define a specific structure for each hour (e.g., Station ID at :00, 2 songs, 1 ad, etc.). The AI then fills this structure with content from your library that matches your rules, giving you incredible control and consistency over your station\'s sound.'
            },
            {
                q: 'How do I use a Clockwheel to generate a schedule?',
                a: 'First, create and save a design on the "Show Designer" page. Then, go to the "Schedule" page, switch the "Generation Mode" from "AI Format" to "Show Designer", and select your saved clockwheel from the dropdown before clicking "Go Live".'
            },
            {
                q: 'Can I edit the live schedule?',
                a: 'Yes. In the "Up Next" list on the "Schedule" page, you can drag and drop items to reorder them or use the trash icon to remove an item from the queue.'
            },
            {
                q: 'How do playlists work?',
                a: 'You can create playlists of specific tracks on the "Playlists" page. These can be manually created or generated by the AI. Once a playlist is created, you can add it to your live playout queue from the "Schedule" page.'
            }
        ]
    },
    {
        category: 'AI Features',
        questions: [
            {
                q: 'What is the AI Co-pilot?',
                a: 'The Co-pilot is your persistent AI assistant, accessible via the lightbulb button. It offers proactive, contextual suggestions based on what you\'re doing. For example, it can offer to build a playlist from your dashboard, generate social posts for a selected song in Content Management, or write a transition script between two songs on the Schedule page.'
            },
            {
                q: 'What does the "Show Prep" assistant do?',
                a: 'The "Show Prep" assistant is like having a personal producer. Select one of your playlists, and the AI will generate a complete set of on-air notes for the host. This includes interesting facts about the songs and artists, creative segues to transition between tracks, and engaging questions to ask your audience.'
            },
            {
                q: 'How does the AI Announcer work?',
                a: 'When you enable "Use AI Announcer" for a music track, the AI will generate a spoken introduction for that song when it\'s played in the schedule. The AI is context-aware, meaning it will often mention the previous track to create a smooth transition. You can set the station\'s "Vibe" on the Dashboard to change the AI\'s tone in real-time.'
            },
            {
                q: 'What can I do in the AI Content Studio?',
                a: 'The studio is your creative hub. You can generate full-length articles, summarize text into radio scripts, create scripts for station IDs, jingles, and ads, and even generate real-time sports updates. All generated text can then be converted directly into audio.'
            },
            {
                q: 'How do I generate a sports update?',
                a: 'In the "AI Content Studio", select the "Sports Update" tab. Enter a team, league, or sports-related topic (e.g., "latest premier league results"), and the AI will use its web search capabilities to generate a broadcast-ready script. You can then convert this script into audio.'
            },
            {
                q: 'What is AI Voice Cloning?',
                a: 'This feature allows you to upload an audio sample of a voice, which the AI will then clone. You can use this cloned voice as an option for your AI Announcer, giving your station a unique and personalized sound.'
            }
        ]
    },
    {
        category: 'Advanced Features & Monetization',
        questions: [
            {
                q: 'How do I run ads on my station?',
                a: 'First, upload your ad audio files in "Content Management" with the type "Ad". Then, navigate to the "Ad Manager" to create a campaign. Define the campaign\'s duration and link your ad creatives. The AI playout generator will automatically include ads from active campaigns when you "Go Live".'
            },
            {
                q: 'How does AI help with audience interaction?',
                a: 'The "Audience Interaction" page has several AI enhancements. The AI automatically analyzes incoming submissions for sentiment (positive/negative) and profanity, giving you visual cues to moderate faster. It can also intelligently match song requests to tracks in your library and instantly convert shoutouts into AI-voiced segments for your queue.'
            },
            {
                q: 'What is RSS Automation and how do I set it up?',
                a: 'RSS Automation allows you to automatically pull in articles from any news feed on the web. Go to "RSS Automation" to add a new feed URL. You can configure how often to parse it, how many articles to fetch, and even have the AI process or summarize the content before it\'s added to your library as playable articles.'
            },
            {
                q: 'How do I generate traffic and weather reports?',
                a: 'Navigate to the "Traffic & Weather" page. For weather, you can search for any city, and the AI will generate a script based on real-time data. For traffic, describe the routes or areas, and the AI will create a professional traffic report script. You can save both as playable content.'
            }
        ]
    },
    {
        category: 'Account & Billing',
        questions: [
            {
                q: 'How are AI Credits used and how can I get more?',
                a: 'AI Credits are consumed whenever you use a generative AI feature, such as generating an article, cloning a voice, creating a social media post, or generating an on-the-fly announcement. The cost for each action is displayed on the relevant button. You can view your remaining balance in the header and purchase more credits on the "AI Credits & Billing" page.'
            }
        ]
    },
    {
        category: 'Troubleshooting',
        questions: [
            {
                q: 'Why do I get a "Playout generator reached max attempts" warning?',
                a: 'This usually means the generator couldn\'t find enough content of the right type to fill the schedule for your selected format. For example, a "Talk Radio" format requires articles or RSS feeds. Try uploading more diverse content or switching to a "Music Radio" format.'
            },
            {
                q: 'My live voice chat isn\'t working.',
                a: 'Make sure you have granted microphone permissions to your browser for this site. Check your system\'s microphone settings to ensure it\'s selected as the input device. If the issue persists, try refreshing the page.'
            },
            {
                q: 'An AI-generated announcement sounds strange or incorrect.',
                a: 'While the AI is powerful, it can sometimes make mistakes. You can override any AI announcement by editing a content item and writing your own "Predefined Announcement". You can also try re-generating the schedule to get a different announcement.'
            }
        ]
    },
];

const AccordionItem: React.FC<{
    q: string;
    a: string;
    isOpen: boolean;
    onClick: () => void;
}> = ({ q, a, isOpen, onClick }) => {
    return (
        <div className="border-b border-gray-200 dark:border-gray-700">
            <button
                onClick={onClick}
                className="w-full flex justify-between items-center text-left py-4 px-2 focus:outline-none"
                aria-expanded={isOpen}
            >
                <span className="font-semibold text-gray-800 dark:text-gray-200">{q}</span>
                <ChevronDownIcon
                    className={`h-5 w-5 text-gray-500 transform transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`}
                />
            </button>
            <div
                className={`overflow-hidden transition-all duration-300 ease-in-out ${isOpen ? 'max-h-96' : 'max-h-0'}`}
            >
                <div className="p-4 bg-gray-50 dark:bg-gray-700/50 rounded-b-lg">
                    <p className="text-gray-600 dark:text-gray-300">{a}</p>
                </div>
            </div>
        </div>
    );
};

const Help: React.FC = () => {
    const [searchTerm, setSearchTerm] = useState('');
    const [openId, setOpenId] = useState<string | null>(null);

    const filteredFaqs = useMemo(() => {
        if (!searchTerm) return faqs;
        const lowercasedFilter = searchTerm.toLowerCase();
        
        return faqs
            .map(category => ({
                ...category,
                questions: category.questions.filter(
                    faq =>
                        faq.q.toLowerCase().includes(lowercasedFilter) ||
                        faq.a.toLowerCase().includes(lowercasedFilter)
                )
            }))
            .filter(category => category.questions.length > 0);
    }, [searchTerm]);

    const handleToggle = (id: string) => {
        setOpenId(openId === id ? null : id);
    };

    return (
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 max-w-4xl mx-auto">
            <div className="flex items-center space-x-3 mb-4">
                <HelpIcon />
                <h2 className="text-2xl font-bold text-gray-800 dark:text-white">Help & Documentation</h2>
            </div>
            <p className="text-gray-600 dark:text-gray-400 mb-6">
                Find answers to common questions about setting up your station, managing content, and using AI features.
            </p>

            <div className="relative mb-8">
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg className="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fillRule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clipRule="evenodd" />
                    </svg>
                </div>
                <input
                    type="text"
                    placeholder="Search for answers..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-brand-blue focus:border-brand-blue bg-white dark:bg-gray-700"
                />
            </div>
            
            <div className="space-y-8">
                {filteredFaqs.length > 0 ? filteredFaqs.map(category => (
                    <div key={category.category}>
                        <h3 className="text-xl font-bold text-gray-800 dark:text-white mb-2 pb-2 border-b-2 border-brand-blue">{category.category}</h3>
                        <div>
                            {category.questions.map((faq, index) => (
                                <AccordionItem
                                    key={`${category.category}-${index}`}
                                    q={faq.q}
                                    a={faq.a}
                                    isOpen={openId === `${category.category}-${index}`}
                                    onClick={() => handleToggle(`${category.category}-${index}`)}
                                />
                            ))}
                        </div>
                    </div>
                )) : (
                    <div className="text-center py-10 text-gray-500 dark:text-gray-400">
                        <p className="font-semibold">No results found for "{searchTerm}"</p>
                        <p className="text-sm mt-2">Try searching for a different keyword.</p>
                    </div>
                )}
            </div>
        </div>
    );
};

export default Help;